<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Habanero.Licensing.Generator</name>
  </assembly>
  <members>
    <member name="T:Habanero.Licensing.Generator.LicenseGenerator">
      <summary>
            Creates licenses programmatically.
            </summary>
    </member>
    <member name="M:Habanero.Licensing.Generator.LicenseGenerator.CreateLicense(System.String,Habanero.Licensing.Generator.ByteHolder,System.Byte[],Habanero.Licensing.Shared.LicensedProductInformation,System.Guid)">
      <summary>
            Creates a license. Requires MicroISV or Enterprise license.
            </summary>
      <param name="licenseString">Your own Simple Software Licensing license string.</param>
      <param name="applicationPrivateKey">Your applications private key as exported by the license manager.</param>
      <param name="applicationSecret">Your application secret as exported by the license manager.</param>
      <param name="product">The product for which to create a new License.</param>
      <param name="serial">The serial of the new license.</param>
      <returns>The generated license.</returns>
    </member>
    <member name="M:Habanero.Licensing.Generator.LicenseGenerator.CreateLicense(System.String,Habanero.Licensing.Generator.ByteHolder,System.Byte[],Habanero.Licensing.Shared.LicensedProductInformation,System.Guid,Habanero.Licensing.Shared.LicensedUser)">
      <summary>
            Creates a license. Requires MicroISV or Enterprise license.
            </summary>
      <param name="licenseString">Your own Simple Software Licensing license string.</param>
      <param name="applicationPrivateKey">Your applications private key as exported by the license manager.</param>
      <param name="applicationSecret">Your application secret as exported by the license manager.</param>
      <param name="product">The product for which to create a new License.</param>
      <param name="serial">The serial of the new license.</param>
      <returns>The generated license.</returns>
      <param name="licensedto">The user for whom to create the license.</param>
    </member>
    <member name="M:Habanero.Licensing.Generator.LicenseGenerator.CreateLicense(System.String,Habanero.Licensing.Generator.ByteHolder,System.Byte[],Habanero.Licensing.Shared.LicensedProductInformation,System.Guid,System.Nullable{System.DateTime})">
      <summary>
            Creates a license. Requires MicroISV or Enterprise license.
            </summary>
      <param name="licenseString">Your own Simple Software Licensing license string.</param>
      <param name="applicationPrivateKey">Your applications private key as exported by the license manager.</param>
      <param name="applicationSecret">Your application secret as exported by the license manager.</param>
      <param name="product">The product for which to create a new License.</param>
      <param name="serial">The serial of the new license.</param>
      <returns>The generated license.</returns>
      <param name="validUntil">The license expiration date.</param>
    </member>
    <member name="M:Habanero.Licensing.Generator.LicenseGenerator.CreateLicense(System.String,Habanero.Licensing.Generator.ByteHolder,System.Byte[],Habanero.Licensing.Shared.LicensedProductInformation,System.Guid,Habanero.Licensing.Shared.LicensedUser,System.Nullable{System.DateTime})">
      <summary>
            Creates a license. Requires MicroISV or Enterprise license.
            </summary>
      <param name="licenseString">Your own Simple Software Licensing license string.</param>
      <param name="applicationPrivateKey">Your applications private key as exported by the license manager.</param>
      <param name="applicationSecret">Your application secret as exported by the license manager.</param>
      <param name="product">The product for which to create a new License.</param>
      <param name="serial">The serial of the new license.</param>
      <returns>The generated license.</returns>
      <param name="licensedto">The user for whom to create the license.</param>
      <param name="validUntil">The license expiration date.</param>
    </member>
    <member name="T:Habanero.Licensing.Generator.LicenseContainer">
      <summary>
            Contains the result of a generated license.
            </summary>
    </member>
    <member name="P:Habanero.Licensing.Generator.LicenseContainer.Product">
      <summary>
            The Product this license is valid for.
            </summary>
    </member>
    <member name="P:Habanero.Licensing.Generator.LicenseContainer.LicensedTo">
      <summary>
            The User this license is valid for.
            </summary>
    </member>
    <member name="P:Habanero.Licensing.Generator.LicenseContainer.ValidUntil">
      <summary>
            How long the license is valid. This value is null if there is no expiration.
            </summary>
    </member>
    <member name="P:Habanero.Licensing.Generator.LicenseContainer.Serial">
      <summary>
            The Serial for this license.
            </summary>
    </member>
    <member name="P:Habanero.Licensing.Generator.LicenseContainer.LicenseCode">
      <summary>
            The cryptographic signature for this license.
            </summary>
    </member>
    <member name="M:Habanero.Licensing.Generator.LicenseContainer.ToString">
      <summary>
            Converts the license informtion into a parseable string representation.
            </summary>
      <returns>A string representing this license.</returns>
    </member>
    <member name="T:Habanero.Licensing.Generator.ByteHolder">
      <summary>
            Transports encrypted bytes.
            </summary>
    </member>
    <member name="M:Habanero.Licensing.Generator.ByteHolder.#ctor(System.String)">
      <summary>
            Initializes a new ByteHolder using a Base64 encoded encrypted byte array.
            </summary>
      <param name="packedBytes">The encrypted bytes as a Base64 encoded string.</param>
    </member>
    <member name="M:Habanero.Licensing.Generator.ByteHolder.#ctor(System.Byte[],System.Byte[],System.Boolean)">
      <summary>
            Initializes a new ByteHolder using the raw byte array.
            </summary>
      <param name="bytes">The raw unencrypted bytes.</param>
      <param name="keySeed">A byte[] used to create a cryptographic key.</param>
      <param name="useStrongAlgorithm">Should strong encryption be used.</param>
    </member>
    <member name="P:Habanero.Licensing.Generator.ByteHolder.Content">
      <summary>
            The encrypted bytes.
            </summary>
    </member>
    <member name="M:Habanero.Licensing.Generator.ByteHolder.UnpackBytes(System.Byte[],System.Byte[],System.Boolean)">
      <summary>
            Decrypts encrypted bytes.
            </summary>
      <param name="packedBytes">The encrypted byte array to extract.</param>
      <param name="keySeed">A byte[] used to create a cryptographic key.</param>
      <param name="useStrongAlgorithm">Should strong encryption be used.</param>
      <returns>The raw decrypted bytes.</returns>
    </member>
    <member name="T:Habanero.Licensing.Generator.NamespaceDoc">
      <summary>
            Contains types used for generating licenses from management applications or web sites.
            </summary>
            Below is a simple example for generating a license. 
            <example><code lang="cs">
                        var license = LicenseGenerator.CreateLicense(thisLicense, new ByteHolder(privateKey), applicationSecret,
                                                                       product, Guid.NewGuid(),
                                                                       licensee,
                                                                       DateTime.UtcNow.AddYears(1));
            </code>
            Note: This example is incomplete.</example></member>
    <!-- Badly formed XML comment ignored for member "M:Habanero.Licensing.Internals.Hidden.DeadEnd.IFakeCryptoService.Compare(System.String,System.String)" -->
  </members>
</doc>